function dn42_ebgp_calculate_priority() {
    int priority = 100;  # 基础优先级
    
    # 同区域检测（+10）
    if bgp_community ~ [(64511, DN42_REGION)] then 
        priority = priority + 10;
    
    # 同国家检测（+5）
    if bgp_community ~ [(64511, DN42_COUNTRY)] then 
        priority = priority + 5;
    
    # eBGP直接邻居检测（+20）
    if bgp_path.len = 1 then 
        priority = priority + 20;
    
    return priority;
}

template bgp dnpeers {
#   vrf DN42_VRF;
    router id DN42_OWNIP;
    local as DN42_OWNAS;
    path metric 1;

    ipv4 {
#       table dn42_table_v4;
        import filter {
            if is_valid_dn42_network() && !is_self_dn42_net() then {
                if (roa_check(dn42_roa, net, bgp_path.last) != ROA_VALID) then {
                    print "[dn42] ROA check failed for ", net, " ASN ", bgp_path.last;
                    reject;
                }
#                bgp_local_pref = dn42_ebgp_calculate_priority(); 
                accept;
            }
            reject;
        };

        export filter {
            if is_valid_dn42_network() && source ~ [RTS_STATIC, RTS_BGP] then{ 
                if (is_self_dn42_net()) then {
		            bgp_community.add((64511, DN42_REGION));
                    bgp_community.add((64511, DN42_COUNTRY));
	            }
                accept;
            }
            reject;
        };
        import limit 1000 action block;
    };

    ipv6 {
#       table dn42_table_v6;
        import filter {
            if is_valid_dn42_network_v6() && !is_self_dn42_net_v6() then {
                if (roa_check(dn42_roa_v6, net, bgp_path.last) != ROA_VALID) then {
                    print "[dn42] ROA check failed for ", net, " ASN ", bgp_path.last;
                    reject;
                }
#                bgp_local_pref = dn42_ebgp_calculate_priority(); 
                accept;
            }
            reject;
        };
        export filter {
            if is_valid_dn42_network_v6() && source ~ [RTS_STATIC, RTS_BGP] then{ 
                if (is_self_dn42_net_v6()) then {
		            bgp_community.add((64511, DN42_REGION));
                    bgp_community.add((64511, DN42_COUNTRY));
	            }
                accept;
            }
            reject;
        };
        import limit 1000 action block;
    };
}


include "peers/*";
